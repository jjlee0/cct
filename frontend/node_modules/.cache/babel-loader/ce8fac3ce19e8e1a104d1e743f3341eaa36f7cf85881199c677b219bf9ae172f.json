{"ast":null,"code":"var _jsxFileName = \"/Users/josep/373/cs373-idb/cs373-idb/frontend/src/components/ArtistsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ArtistsPage() {\n  _s();\n  const {\n    artistId\n  } = useParams();\n  const [artistData, setArtistData] = useState(null); // Initialize with null\n  const [genreName, setGenreName] = useState(\"\");\n  const [albumCoverPairs, setAlbumCoverPairs] = useState({});\n  const [eventIdPairs, setEventIdPairs] = useState({});\n  useEffect(() => {\n    const GetArtistInfo = async () => {\n      try {\n        const response = await axios.get(`/GetArtist/${artistId}`);\n        setArtistData(response.data);\n      } catch (error) {\n        console.error('Error ', error);\n      }\n    };\n    GetArtistInfo();\n  }, [artistId]);\n  useEffect(() => {\n    if (artistData) {\n      const GetGenreName = async () => {\n        try {\n          const genreResponse = await axios.get(`/GetGenre/${artistData.genre_id}`);\n          setGenreName(genreResponse.data.name);\n        } catch (error) {\n          console.error('Error ', error);\n        }\n      };\n      const getEventNames = async () => {\n        try {\n          const eventPromises = artistData.future_events.map(async eventId => {\n            const response = await axios.get(`/GetEvent/${eventId}`);\n            return {\n              eventId,\n              eventName: response.data.event_name\n            };\n          });\n          const eventNames = await Promise.all(eventPromises);\n          const eventIdPairs = Object.fromEntries(eventNames.map(event => [event.eventId, event.eventName]));\n          setEventIdPairs(eventIdPairs);\n        } catch (error) {\n          console.error('Error:', error);\n        }\n      };\n      if (artistData.albums && artistData.album_covers) {\n        const albumCoverPairs = Object.fromEntries(artistData.albums.map((key, index) => [key, artistData.album_covers[index]]));\n        setAlbumCoverPairs(albumCoverPairs);\n      }\n      GetGenreName();\n      getEventNames();\n    }\n  }, [artistData]);\n  if (!artistData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-page m-5 g-5 text-start d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"artist-page-title\",\n        children: artistData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"artist-page-text\",\n        children: [\"Popularity: \", artistData.popularity, \" / 100\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"artist-page-text mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/genre/${artistData.genre_id}`,\n          className: \"artist-page-text\",\n          children: genreName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"artist-page-subtitle\",\n        children: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row artist-page-albums flex-wrap\",\n        children: Object.entries(albumCoverPairs).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white col-lg-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"artist-page-album\",\n            src: value,\n            alt: \"albumCover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"artist-page-subtitle mb-4\",\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: Object.entries(eventIdPairs).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/venue/${key}`,\n              className: \"artist-page-smalltext\",\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 42\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ArtistsPage, \"jM86rGE2nUmg2J/jllgFZlwBH+I=\", false, function () {\n  return [useParams];\n});\n_c = ArtistsPage;\nexport default ArtistsPage;\nvar _c;\n$RefreshReg$(_c, \"ArtistsPage\");","map":{"version":3,"names":["React","useParams","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ArtistsPage","_s","artistId","artistData","setArtistData","genreName","setGenreName","albumCoverPairs","setAlbumCoverPairs","eventIdPairs","setEventIdPairs","GetArtistInfo","response","get","data","error","console","GetGenreName","genreResponse","genre_id","name","getEventNames","eventPromises","future_events","map","eventId","eventName","event_name","eventNames","Promise","all","Object","fromEntries","event","albums","album_covers","key","index","children","fileName","_jsxFileName","lineNumber","columnNumber","className","popularity","to","entries","value","src","alt","_c","$RefreshReg$"],"sources":["/Users/josep/373/cs373-idb/cs373-idb/frontend/src/components/ArtistsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction ArtistsPage() {\n    const { artistId } = useParams();\n    const [artistData, setArtistData] = useState(null);  // Initialize with null\n    const [genreName, setGenreName] = useState(\"\");\n    const [albumCoverPairs, setAlbumCoverPairs] = useState({});\n    const [eventIdPairs, setEventIdPairs] = useState({});\n\n    useEffect(() => {\n        const GetArtistInfo = async () => {\n            try {\n                const response = await axios.get(`/GetArtist/${artistId}`);\n                setArtistData(response.data);\n            } catch (error) {\n                console.error('Error ', error);\n            }\n        };\n        GetArtistInfo();\n    }, [artistId]);\n\n    useEffect(() => {\n        if (artistData) {\n            const GetGenreName = async () => {\n                try {\n                    const genreResponse = await axios.get(`/GetGenre/${artistData.genre_id}`);\n                    setGenreName(genreResponse.data.name);\n                } catch (error) {\n                    console.error('Error ', error);\n                }\n            };\n\n            const getEventNames = async () => {\n                try {\n                    const eventPromises = artistData.future_events.map(async (eventId) => {\n                        const response = await axios.get(`/GetEvent/${eventId}`);\n                        return { eventId, eventName: response.data.event_name };\n                    });\n                    const eventNames = await Promise.all(eventPromises);\n\n                    const eventIdPairs = Object.fromEntries(\n                        eventNames.map(event => [event.eventId, event.eventName])\n                    );\n                    setEventIdPairs(eventIdPairs);\n                } catch (error) {\n                    console.error('Error:', error);\n                }\n            };\n\n            if (artistData.albums && artistData.album_covers) {\n                const albumCoverPairs = Object.fromEntries(\n                    artistData.albums.map((key, index) => [key, artistData.album_covers[index]])\n                );\n                setAlbumCoverPairs(albumCoverPairs);\n            }\n\n            GetGenreName();\n            getEventNames();\n        }\n    }, [artistData]);\n\n    if (!artistData) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <>\n            <div className=\"artist-page m-5 g-5 text-start d-flex flex-column\">\n                <h1 className=\"artist-page-title\">{artistData.name}</h1>\n                <h3 className=\"artist-page-text\">Popularity: {artistData.popularity} / 100</h3>\n                <h1 className=\"artist-page-text mb-5\"><Link to={`/genre/${artistData.genre_id}`} className=\"artist-page-text\">{genreName}</Link></h1>\n                <h1 className=\"artist-page-subtitle\">Albums</h1>\n                <div className=\"row artist-page-albums flex-wrap\">\n                    {\n                        Object.entries(albumCoverPairs).map(([key, value]) => (\n                            <div className=\"text-white col-lg-4\" key={key}>\n                                <img className=\"artist-page-album\" src={value} alt=\"albumCover\" />\n                                <p><b>{key}</b></p>\n                            </div>\n                        ))\n                    }\n                </div>\n                <h1 className=\"artist-page-subtitle mb-4\">Events</h1>\n                <div className=\"d-flex flex-column\">\n                    {\n                        Object.entries(eventIdPairs).map(([key, value]) => (\n                            <p key={key}><b><Link to={`/venue/${key}`} className=\"artist-page-smalltext\">{value}</Link></b></p>\n                        ))\n                    }\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default ArtistsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}