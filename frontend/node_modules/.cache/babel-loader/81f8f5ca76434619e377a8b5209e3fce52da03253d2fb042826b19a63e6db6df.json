{"ast":null,"code":"import React from 'react';\nimport ArtistsCard from \"./ArtistsCard\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const artist_information = [{\n  name: \"Travis Scott\",\n  id: 1,\n  birth: \"May 1\",\n  country: \"America\",\n  popularity: 12,\n  genre: \"Hip Hop\",\n  albums: [\"astro world\", \"MBDTF\"],\n  futureEvents: [\"Austin,TX\", \"Dallas, TX\", \"NYC, NY\"],\n  image_url: \"www\"\n}, {\n  name: \"Tony Stark\",\n  id: 2,\n  birth: \"May 51\",\n  country: \"USA\",\n  popularity: 1,\n  genre: \"Rap\",\n  albums: [\"mark1\", \"mark2\", \"mark3\", \"mark4\", \"mark5\"],\n  futureEvents: [\"Austin,TX\", \"NewJeresy, TX\", \"NYC, NY\", \"Deep ,Sea\"],\n  image_url: \"www\"\n}, {\n  name: \"John Doe\",\n  id: 3,\n  birth: \"Aug 12\",\n  country: \"Europe\",\n  popularity: 99,\n  genre: \"Pop\",\n  albums: [\"Pork\", \"Man Man\"],\n  futureEvents: [\"George, TX\", \"City, TX\", \"NYC, NY\"],\n  image_url: \"www\"\n}\n// {\n//     name: \"first last\",\n//     id: 4,\n//     birth: \"mm/dd\",\n//     country: \"country\",\n//     popularity: 100,\n//     genre: \"genre\",\n//     albums : [\"album1\" ,\"album2\"],\n//     futureEvents: [\"city, state\", \"city, state\", \"city, state\"],\n//     image_url : \"www\"\n// }\n];\nfunction Artists(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = Artists;\nexport default Artists;\nvar _c;\n$RefreshReg$(_c, \"Artists\");","map":{"version":3,"names":["React","ArtistsCard","Fragment","_Fragment","jsxDEV","_jsxDEV","artist_information","name","id","birth","country","popularity","genre","albums","futureEvents","image_url","Artists","props","_c","$RefreshReg$"],"sources":["/Users/austinnguyen/Desktop/cs373-idb/Front-End/src/components/Artists.js"],"sourcesContent":["import React from 'react';\nimport ArtistsCard from \"./ArtistsCard\";\n\n\nexport const artist_information = [\n    {\n       \n        name: \"Travis Scott\",\n        id: 1,\n        birth: \"May 1\",\n        country: \"America\",\n        popularity: 12,\n        genre: \"Hip Hop\",\n        albums : [\"astro world\" ,\"MBDTF\"],\n        futureEvents: [\"Austin,TX\", \"Dallas, TX\", \"NYC, NY\"],\n        image_url : \"www\"\n        \n    },\n    {\n        name: \"Tony Stark\",\n        id: 2,\n        birth: \"May 51\",\n        country: \"USA\",\n        popularity: 1,\n        genre: \"Rap\",\n        albums : [\"mark1\" ,\"mark2\",\"mark3\",\"mark4\",\"mark5\"],\n        futureEvents: [\"Austin,TX\", \"NewJeresy, TX\", \"NYC, NY\", \"Deep ,Sea\"],\n        image_url : \"www\"\n    },\n    {\n        name: \"John Doe\",\n        id: 3,\n        birth: \"Aug 12\",\n        country: \"Europe\",\n        popularity: 99,\n        genre: \"Pop\",\n        albums : [\"Pork\" ,\"Man Man\"],\n        futureEvents: [\"George, TX\", \"City, TX\", \"NYC, NY\"],\n        image_url : \"www\"\n    },\n    // {\n    //     name: \"first last\",\n    //     id: 4,\n    //     birth: \"mm/dd\",\n    //     country: \"country\",\n    //     popularity: 100,\n    //     genre: \"genre\",\n    //     albums : [\"album1\" ,\"album2\"],\n    //     futureEvents: [\"city, state\", \"city, state\", \"city, state\"],\n    //     image_url : \"www\"\n    // }\n    \n];\n\nfunction Artists(props) {\n    return (\n        <>\n\n            {/* <div class=\"row g-5 m-2\" >\n                <h1>Artists</h1>\n                {\n                    artist_information.map((artist) => (\n                        <div id={artist.id} class=\"col-xl-3 h-25\" key={artist.id}>\n                            <ArtistsCard ArtistsName={artist.name} Genre={artist.genre} />\n                        </div>\n                    ))\n                }\n            </div> */}\n\n            {/* static dont' use */}\n        </>\n       \n    );\n}\n\nexport default Artists;\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAGxC,OAAO,MAAMC,kBAAkB,GAAG,CAC9B;EAEIC,IAAI,EAAE,cAAc;EACpBC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,UAAU,EAAE,EAAE;EACdC,KAAK,EAAE,SAAS;EAChBC,MAAM,EAAG,CAAC,aAAa,EAAE,OAAO,CAAC;EACjCC,YAAY,EAAE,CAAC,WAAW,EAAE,YAAY,EAAE,SAAS,CAAC;EACpDC,SAAS,EAAG;AAEhB,CAAC,EACD;EACIR,IAAI,EAAE,YAAY;EAClBC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,OAAO,EAAE,KAAK;EACdC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAG,CAAC,OAAO,EAAE,OAAO,EAAC,OAAO,EAAC,OAAO,EAAC,OAAO,CAAC;EACnDC,YAAY,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE,SAAS,EAAE,WAAW,CAAC;EACpEC,SAAS,EAAG;AAChB,CAAC,EACD;EACIR,IAAI,EAAE,UAAU;EAChBC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,OAAO,EAAE,QAAQ;EACjBC,UAAU,EAAE,EAAE;EACdC,KAAK,EAAE,KAAK;EACZC,MAAM,EAAG,CAAC,MAAM,EAAE,SAAS,CAAC;EAC5BC,YAAY,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,SAAS,CAAC;EACnDC,SAAS,EAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CAEH;AAED,SAASC,OAAOA,CAACC,KAAK,EAAE;EACpB,oBACIZ,OAAA,CAAAF,SAAA,mBAcE,CAAC;AAGX;AAACe,EAAA,GAnBQF,OAAO;AAqBhB,eAAeA,OAAO;AAAC,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}