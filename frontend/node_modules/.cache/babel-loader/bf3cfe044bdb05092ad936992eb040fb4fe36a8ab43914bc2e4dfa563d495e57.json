{"ast":null,"code":"var _jsxFileName = \"/Users/austinnguyen/Desktop/cs373-idb/frontend/src/components/ArtistsPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n// useState initialization has default data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ArtistsPage(props) {\n  _s();\n  const {\n    artistId\n  } = useParams();\n  const [artistData, setArtistData] = useState({\n    \"name\": \"Childish Gambino\",\n    \"id\": \"73sIBHcqh3Z3NyqHKZ7FOL\",\n    \"popularity\": 79,\n    \"albums\": [\"Atavista\", \"\\\"Awaken, My Love!\\\"\", \"Kauai\"],\n    \"album_covers\": [\"https://i.scdn.co/image/ab67616d0000b273a9afb2484111b87abc2b4a80\", \"https://i.scdn.co/image/ab67616d0000b2737582716b3666a5235d5af4ea\", \"https://i.scdn.co/image/ab67616d0000b273d98a6832141788d8c355852b\"],\n    \"future_events\": [\"Z698xZu0ZaGQo\", \"Z698xZbpZ17GA_K\", \"G5vHZb1niHezV\", \"Event 4 id\"],\n    \"image_url\": \"https://i.scdn.co/image/ab6761610000f178c3dc5429b676b16d451e5f77\",\n    \"genre_id\": \"KnvZfZ7vAvv\"\n  });\n\n  // /api/GetArtist/<string:artist_id>\n\n  axios.post(`/api/GetArtist/${artistId}`).then(response => {\n    setArtistData(response);\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n  const genre = \"defaultGenreName\";\n  axios.post(`/api/GetGenre/${artistData[\"genre_id\"]}`).then(response => {\n    genre = response;\n  }).catch(error => {\n    console.error('Error:', error);\n  });\n  const dictionary = Object.fromEntries(artistData.albums.map((key, index) => [key, artistData.album_covers[index]]));\n  eventNames = [];\n  axios.post('/api/GetEvent/');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"artist-page m-5 g-5 text-start d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"artist-page-title\",\n        children: artistData[\"name\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        class: \"artist-page-text\",\n        children: [\"#\", artistData[\"popularity\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"artist-page-text mb-5\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/genre/${artistData[\"genre_id\"]}`,\n          class: \"\",\n          children: genre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"artist-page-subtitle\",\n        children: \"Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row artist-page-albums flex-wrap\",\n        children: Object.entries(dictionary).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-black col-lg-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"artist-page-album\",\n            src: value,\n            alt: \"albumCover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 32\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"artist-page-subtitle mb-4\",\n        children: \"Venues\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \" d-flex flex-column \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(ArtistsPage, \"V3ZFUFHy46MbKUcfmNVp+0Op3gw=\", false, function () {\n  return [useParams];\n});\n_c = ArtistsPage;\nexport default ArtistsPage;\n\n// const artist = {\n//     name: \"Austin\",\n//     popularity: 12,\n//     genreId: \"genre ID\",\n//     albums: [\"this\", \"dsf\", \"dsf\", \"tha\", \"thifs\", \"dsf\", \"tha\"],\n//     \"album_covers\": [\n//         \"https://i.scdn.co/image/ab67616d0000b273a9afb2484111b87abc2b4a80\",\n//         \"https://i.scdn.co/image/ab67616d0000b2737582716b3666a5235d5af4ea\",\n//         \"https://i.scdn.co/image/ab67616d0000b273d98a6832141788d8c355852b\"\n//     ],\n\n//     futureEvents: [\"Hy-Vee INDYCAR Sunday Race + Post Malone & Kelsea Ballerini\", \"The 2nd Annual Capital City Blues Festival\", \"Broccoli City Festival 2-day Ticket (7/27-7/28)\"]\n// }\nvar _c;\n$RefreshReg$(_c, \"ArtistsPage\");","map":{"version":3,"names":["React","useParams","useState","axios","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","ArtistsPage","props","_s","artistId","artistData","setArtistData","post","then","response","catch","error","console","genre","dictionary","Object","fromEntries","albums","map","key","index","album_covers","eventNames","children","class","fileName","_jsxFileName","lineNumber","columnNumber","to","entries","value","className","src","alt","_c","$RefreshReg$"],"sources":["/Users/austinnguyen/Desktop/cs373-idb/frontend/src/components/ArtistsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from 'react';\nimport axios from 'axios'\nimport { Link } from 'react-router-dom';\n\n\n// useState initialization has default data\n\nfunction ArtistsPage(props) {\n    const { artistId } = useParams();\n    const [artistData, setArtistData] = useState({\n        \"name\": \"Childish Gambino\",\n        \"id\": \"73sIBHcqh3Z3NyqHKZ7FOL\",\n        \"popularity\": 79,\n        \"albums\": [\"Atavista\", \"\\\"Awaken, My Love!\\\"\", \"Kauai\"],\n        \"album_covers\": [\"https://i.scdn.co/image/ab67616d0000b273a9afb2484111b87abc2b4a80\", \"https://i.scdn.co/image/ab67616d0000b2737582716b3666a5235d5af4ea\", \"https://i.scdn.co/image/ab67616d0000b273d98a6832141788d8c355852b\"],\n        \"future_events\": [\"Z698xZu0ZaGQo\", \"Z698xZbpZ17GA_K\", \"G5vHZb1niHezV\", \"Event 4 id\"],\n        \"image_url\": \"https://i.scdn.co/image/ab6761610000f178c3dc5429b676b16d451e5f77\",\n        \"genre_id\": \"KnvZfZ7vAvv\",\n    })\n\n    // /api/GetArtist/<string:artist_id>\n\n    axios.post(`/api/GetArtist/${artistId}`).then(response => {\n        setArtistData(response)\n    })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n\n    const genre = \"defaultGenreName\"\n    axios.post(`/api/GetGenre/${artistData[\"genre_id\"]}`).then(response => {\n        genre = response;\n    }).catch(error => {\n        console.error('Error:', error);\n    });\n\n    const dictionary = Object.fromEntries(\n        artistData.albums.map((key, index) => [key, artistData.album_covers[index]])\n    );\n\n    eventNames = []\n\n    axios.post('/api/GetEvent/')\n\n\n    return (\n        <>\n            <div class=\"artist-page m-5 g-5 text-start d-flex flex-column\">\n                <h1 class=\"artist-page-title\">{artistData[\"name\"]}</h1>\n                <h3 class=\"artist-page-text\">#{artistData[\"popularity\"]}</h3>\n                <h1 class=\"artist-page-text mb-5\"><Link to={`/genre/${artistData[\"genre_id\"]}`} class=\"\">{genre}</Link></h1>\n                <h1 class=\"artist-page-subtitle\" >Albums</h1>\n                <div class=\"row artist-page-albums flex-wrap\">\n\n                    {\n                    Object.entries(dictionary).map(([key, value]) => (\n                        <div className=\"text-black col-lg-4\" key={key}>\n                            <img className=\"artist-page-album\" src={value} alt=\"albumCover\" />\n                            <p><b>{key}</b></p>\n                        </div>\n                    ))}\n\n\n                    {/* {\n                        artistData.albums.map((album) => (\n                            <div class=\"text-black col-lg-4\">\n                                <img class=\"artist-page-album\" src=\"https://i.scdn.co/image/ab67616d0000b2736cfd8376a0faaf6e9a5240b6\" alt=\"albumCover\" />\n                                <p><b>{album}</b></p>\n                            </div>\n                        ))\n                    } */}\n                </div>\n                <h1 class=\"artist-page-subtitle mb-4\">Venues</h1>\n                <div class=\" d-flex flex-column \">\n                    {/* {\n                        artistData.futureEvents.map((venue) => (\n                            <p><b><a class=\"artist-page-smalltext  \">{venue}</a></b></p>\n                        ))\n                    } */}\n                </div>\n            </div >\n\n\n        </>\n    );\n}\n\nexport default ArtistsPage;\n\n// const artist = {\n//     name: \"Austin\",\n//     popularity: 12,\n//     genreId: \"genre ID\",\n//     albums: [\"this\", \"dsf\", \"dsf\", \"tha\", \"thifs\", \"dsf\", \"tha\"],\n//     \"album_covers\": [\n//         \"https://i.scdn.co/image/ab67616d0000b273a9afb2484111b87abc2b4a80\",\n//         \"https://i.scdn.co/image/ab67616d0000b2737582716b3666a5235d5af4ea\",\n//         \"https://i.scdn.co/image/ab67616d0000b273d98a6832141788d8c355852b\"\n//     ],\n\n//     futureEvents: [\"Hy-Vee INDYCAR Sunday Race + Post Malone & Kelsea Ballerini\", \"The 2nd Annual Capital City Blues Festival\", \"Broccoli City Festival 2-day Ticket (7/27-7/28)\"]\n// }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}